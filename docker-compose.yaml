version: "3.8"

networks:
  els:
    driver: bridge

services:
  # Первоначальные настройки ES
  setup:
    image: elasticsearch:${ELASTIC_VERSION}
    user: "0"
    # Ждем запуска ES и после этого устанавливаем пароль для пользователя kibana_system
    command: >
      bash -c '
        echo "Waiting for Elasticsearch";
        until curl -s ${ELASTIC_URL} | grep -q "missing authentication credentials"; do sleep 10; done;
        echo "Setting kibana_system password";
        until curl -s -X POST -u "elastic:${ELASTIC_PASSWORD}" -H "Content-Type: application/json" ${ELASTIC_URL}/_security/user/kibana_system/_password -d "{\"password\":\"${KIBANA_PASSWORD}\"}" | grep -q "^{}"; do sleep 10; done;
        echo "Done";
      '
    networks:
      - els
    depends_on:
      elasticsearch:
        condition: service_healthy

  # Сервис Elasticsearch
  elasticsearch:
    image: elasticsearch:${ELASTIC_VERSION}
    container_name: elasticsearch
    environment:
      # Режим кластера (single-node)
      - discovery.type=single-node
      # Имя ноды
      - node.name=elasticsearch
      # Название кластера
      - cluster.name=els
      - xpack.security.enabled=true
      - xpack.license.self_generated.type=basic
      # Пароль пользователя elastic
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - ${VOLUMES_PATH}/elasticsearch/data:/usr/share/elasticsearch/data
    restart: always
    networks:
      - els
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200 | grep -q 'missing authentication credentials'"]
      interval: 10s
      timeout: 10s
      retries: 15
      start_period: 30s

  # Сервис Kibana
  kibana:
    image: kibana:${ELASTIC_VERSION}
    container_name: kibana
    environment:
      # Имя сервера
      - server.name=kibana
      # Имя пользователя в кластере Elasticsearch
      - ELASTICSEARCH_USERNAME=kibana_system
      # Пароль пользователя
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      # Хосты Elasticsearch
      - ELASTICSEARCH_HOSTS=${ELASTIC_URL}
      # Для отображения загрузки ЦП контейнером
      - monitoring.ui.container.elasticsearch.enabled=true
    ports:
      - "5601:5601"
    networks:
      - els
    depends_on:
      elasticsearch:
        condition: service_healthy
      setup:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD-SHELL", "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'"]
      interval: 10s
      timeout: 10s
      retries: 15
      start_period: 30s